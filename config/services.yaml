# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    WalletAccountant\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    WalletAccountant\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    WalletAccountant\Command\UserCreateCommand:
        arguments: ['@prooph_service_bus.user_command_bus', '@prooph_service_bus.message_factory']
        tags: ['console.command']

    WalletAccountant\Domain\User\Handler\CreateUserHandler:
        arguments: ['@user_repository']
        public: true
        tags:
            - { name: 'prooph_service_bus.user_command_bus.route_target', message_detection: true }

    WalletAccountant\Infrastructure\MongoDB\UserProjectionRepository:
        arguments:
            $databaseName: '%env(MONGODB_DB)%'

    WalletAccountant\Infrastructure\Client\MongoDB:
        arguments:
            - '@doctrine_mongodb'

    # Projection runners
    walletaccountant.projection_runner.user:
        class: WalletAccountant\Projection\ProjectionRunner
        public: true
        arguments:
            $projectionName: 'user_projection'
            $projection: '@prooph_event_store.projection.user_projection'
            $projectionManager: '@prooph_event_store.projection.user_projection.projection_manager'
            $readModel: '@prooph_event_store.projection.user_projection.read_model'
